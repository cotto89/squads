{"version":3,"sources":["../../src/helper/validates.js"],"names":["validateContext","hasRegisteredHandler","refusePromise","validateHandlerExistence","validateActionExistence","ctx","TypeError","context","handler","Error","event","value","ReferenceError","action","target"],"mappings":";;;;;;;;;;QAKgBA,e,GAAAA,e;QAOAC,oB,GAAAA,oB;QAMAC,a,GAAAA,a;QASAC,wB,GAAAA,wB;QAMAC,uB,GAAAA,uB;;AA/BhB;;;;AACA;;;;AAHA;;AAKO,SAASJ,eAAT,CAAyBK,GAAzB,EAA8B;AACjC,QAAI,CAAC,sBAASA,GAAT,CAAL,EAAoB;AAChB,cAAM,IAAIC,SAAJ,CAAc,uBAAd,CAAN;AACH;AACD,WAAO,IAAP;AACH;;AAEM,SAASL,oBAAT,CAA8BM,OAA9B,EAAuCC,OAAvC,EAAgD;AACnD,QAAIA,OAAJ,EAAa;AACT,cAAM,IAAIC,KAAJ,OAAcF,OAAd,iCAAN;AACH;AACJ;;AAEM,SAASL,aAAT,CAAuBQ,KAAvB,EAA8BC,KAA9B,EAAqC;AACxC,QAAIA,kCAAJ,EAA8B;AAC1B,cAAM,wBACF,MAAID,KAAJ,kEACA,4CAFE,CAAN;AAIH;AACJ;;AAEM,SAASP,wBAAT,CAAkCO,KAAlC,EAAyCF,OAAzC,EAAkD;AACrD,QAAI,CAACA,OAAL,EAAc;AACV,cAAM,IAAII,cAAJ,6BAA6CF,KAA7C,CAAN;AACH;AACJ;;AAEM,SAASN,uBAAT,CAAiCG,OAAjC,EAA0CM,MAA1C,EAAkDC,MAAlD,EAA0D;AAC7D,QAAI,CAACA,MAAL,EAAa;AACT,cAAM,IAAIF,cAAJ,4BAA4CC,MAA5C,aAA0DN,OAA1D,CAAN;AACH;AACJ","file":"validates.js","sourcesContent":["/* eslint-disable import/prefer-default-export*/\n\nimport isString from 'lodash.isstring';\nimport { RefuseError } from './errors.js';\n\nexport function validateContext(ctx) {\n    if (!isString(ctx)) {\n        throw new TypeError(\"'context' is required\");\n    }\n    return true;\n}\n\nexport function hasRegisteredHandler(context, handler) {\n    if (handler) {\n        throw new Error(`\"${context}\" handler is already exists`);\n    }\n}\n\nexport function refusePromise(event, value) {\n    if (value instanceof Promise) {\n        throw new RefuseError(\n            `\"${event}\" returned Promise. But Squad cannot be accepted Promise. ` +\n            'You can use SharedAction for async action.'\n        );\n    }\n}\n\nexport function validateHandlerExistence(event, handler) {\n    if (!handler) {\n        throw new ReferenceError(`Cannot find handler on ${event}`);\n    }\n}\n\nexport function validateActionExistence(context, action, target) {\n    if (!target) {\n        throw new ReferenceError(`Can not find action: \"${action}\" in ${context}`);\n    }\n}\n"]}