{"version":3,"sources":["../../src/lib/Squad.js"],"names":["defaults","state","setState","nextState","Squad","options","context","mixins","actions","subscribe","before","after","$mixins","Array","isArray","src","call","event","value","_emitter","trigger","action","_dispatcher","dispatchState","publish","emitter","dispatcher","onDispatch","actionHandler","bind","targetEvent","on","listenHandler","$action","beforeEach","afterEach","error","name","console","message","listener"],"mappings":"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","file":"Squad.js","sourcesContent":["/* eslint-disable no-use-before-define */\n\nimport merge from 'lodash.merge';\nimport isPlainObject from 'lodash.isplainobject';\nimport { validateContext, refusePromise, validateActionExistence } from './../helper/validates.js';\nimport mixin from './../helper/mixin.js';\nimport { Prevent } from './../helper/errors.js';\n\nconst defaults = {\n    state: {},\n    setState(nextState) {\n        this.state = Object.assign({}, this.state, nextState);\n    }\n};\n\nexport default class Squad {\n    /**\n     * Modifier default behavior of Squad\n     *\n     * @static\n     * @param {Object} options\n     * @returns Squad\n     */\n    static extend(options) {\n        Object.assign(defaults, options);\n        return this;\n    }\n\n\n    /**\n     * @param {Object} options\n     * @param {string} options.context\n     * @param {Object} options.state\n     * @param {Object} [options.actions]\n     * @param {Object} [options.subscribe]\n     * @param {Object[]} [options.mixin]\n     */\n    constructor(options) {\n        const { context, state, mixins } = options;\n        this.state = state || defaults.state;\n        this.context = validateContext(context) && context;\n        this.actions = {};\n        this.subscribe = {};\n        this.before = {};\n        this.after = {};\n\n        const $mixins = Array.isArray(mixins) ? mixins : [];\n        const src = merge(...$mixins, options);\n        mixin(this, src, this, ['context', 'state', 'mixins']);\n    }\n\n    /**\n     * @param {Object} nextState\n     */\n    setState(nextState) {\n        defaults.setState.call(this, nextState);\n        return this.state;\n    }\n\n    /**\n     * Trigger SharedAction\n     *\n     * @param {string} event - 'context.action'\n     * @param {any} value\n     */\n    trigger(event, ...value) {\n        this._emitter.trigger(event, ...value);\n    }\n\n    /**\n     * Dispatch State on manual\n     * Publish event for listener when pass a action\n     * Scenario: When use Promise in SquadAction, use setState and forceUpdate on manual\n     *\n     * @param {string} [action]\n     */\n    forceUpdate(action) {\n        this._dispatcher.dispatchState(this.context, this.state);\n        action && this._emitter.publish(`${this.context}.${action}`, this.state);\n    }\n\n    /**\n     * Prevent transaction\n     */\n    prevent() {\n        throw new Prevent();\n    }\n\n\n    /**\n     * Connect to ActionEmitter, StateDispatcher(dispatcher)\n     *\n     * @param {ActionHandler} handler\n     * @param {EventEmitter} dispatcher\n     */\n    _connect(emitter, dispatcher) {\n        this._dispatcher = dispatcher;\n        this._emitter = emitter;\n\n        /* Set handler to ActionEmitter */\n        this._emitter.onDispatch(this.context, actionHandler.bind(this));\n\n        /* Set subscribe as listeners to ActionEmitter */\n        for (const targetEvent of Object.keys(this.subscribe)) {\n            this._emitter.on(targetEvent, listenHandler.bind(this));\n        }\n    }\n}\n\n/**\n * @param {string} action\n * @param {any} value\n */\nfunction actionHandler(action, ...value) {\n    const $action = this.actions[action];\n    let nextState;\n\n    try {\n        validateActionExistence(this.context, action, $action);\n        /*\n         * Exec lifecycle and action.\n         * When stop transaction, You can use this.prevent()\n         */\n        this.beforeEach && this.beforeEach(action, ...value);\n        this.before[action] && this.before[action](...value);\n        nextState = $action(...value);\n\n        // https://github.com/cotto89/squads/issues/1\n        refusePromise(`${this.context}.${action}`, nextState);\n\n        this.afterEach && this.afterEach(action, nextState);\n        this.after[action] && this.after[action](nextState);\n    } catch (error) {\n        if (error.name === 'Prevent') return;\n        if (error.name === 'RefuseError') {\n            console.error(error.message);\n            return;\n        }\n\n        console.error(error);\n        return;\n    }\n\n    if (!nextState || !isPlainObject(nextState)) return;\n    this.setState(nextState);\n    this._dispatcher.dispatchState(this.context, this.state);\n    this._emitter.publish(`${this.context}.${action}`, this.state);\n}\n\n\n/**\n * @param {string} event\n * @param {any} value\n */\nfunction listenHandler(event, ...value) {\n    const listener = this.subscribe[event];\n    let nextState;\n\n    if (!listener) return;\n\n    try {\n        nextState = listener(...value);\n        refusePromise(event, nextState);\n    } catch (error) {\n        if (error.name === 'Prevent') return;\n        if (error.name === 'RefuseError') {\n            console.error(error.message);\n            return;\n        }\n\n        console.error(error);\n        return;\n    }\n\n    if (!nextState || !isPlainObject(nextState)) return;\n    this.setState(nextState);\n    this._dispatcher.dispatchState(this.context, this.state);\n}\n"]}